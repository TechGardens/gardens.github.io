<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://github.com/mlgardens/gardens.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://github.com/mlgardens/gardens.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-06-04T16:32:58+00:00</updated><id>https://github.com/mlgardens/gardens.github.io/feed.xml</id><title type="html">Gardens üå±</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Conditional expectation method for missing values replacement</title><link href="https://github.com/mlgardens/gardens.github.io/blog/2024/missing_values_conditional_expectation/" rel="alternate" type="text/html" title="Conditional expectation method for missing values replacement"/><published>2024-05-16T00:00:00+00:00</published><updated>2024-05-16T00:00:00+00:00</updated><id>https://github.com/mlgardens/gardens.github.io/blog/2024/missing_values_conditional_expectation</id><content type="html" xml:base="https://github.com/mlgardens/gardens.github.io/blog/2024/missing_values_conditional_expectation/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>During my recent study of machine learning concepts in book by C. Bishop <d-cite key="bishop2006pattern"></d-cite>, I came across the concept of conditional expectation.This sparked a realization: why not leverage this method for handling missing data in datasets? Thus, this article came to fruition.</p> <p>Handling missing values is a common challenge in real-world datasets, where empty cells can disrupt analysis. These ‚Äúmissing values‚Äù need to be addressed before we can effectively use the data. To bridge these gaps, we often turn to strategies like using the mean or median of a feature, or simply removing the incomplete records. Using the mean or median is a straightforward solution, especially when features are uncorrelated. By calculating the global mean of a specific feature and filling in the missing values, we can quickly patch the dataset. However, this method might compromise the data integrity.</p> <p>For this reason, another method for determining missing values is needed. In this article, we will explore and test conditional expectation as an alternative approach. Conditional expectation takes into account the relationships between features, providing a potentially more accurate and context-aware way to handle missing data. By leveraging the dependencies among variables, we aim to fill in the gaps more effectively and preserve the integrity of the dataset.</p> <p>Before we dive in, I want to acknowledge that there may already exist prior scientific research on this topic. This article stands as my independent investigation, aiming to validate and demonstrate the effectiveness of conditional expectation through practical implementation.</p> <h3 id="why-data-integrity-suffers---short-example">Why data integrity suffers? - short example</h3> <p>Let‚Äôs delve into a practical example: obesity classification. Imagine our dataset includes height, weight, and an obesity label. Now, suppose some weight entries are missing. We want to retain these records, so we need to estimate the missing weights. If we choose to fill in these gaps with the average weight‚Äîsay, 70 kg‚Äîwe might end up with distorted data. Table <a href="#tab1">1</a> illustrates this with three artificial records where the weight is replaced by the mean value of 70 kg. The obesity column shows the true labels, while the model prediction column displays the predictions from a well-trained model.</p> <p><a id="tab1">Table 1.</a> Sample records with weight replaced by mean value.</p> <table> <thead> <tr> <th>Weight [kg]</th> <th>Height [cm]</th> <th>Obesity</th> <th>Model prediction</th> </tr> </thead> <tbody> <tr> <td>70</td> <td>140</td> <td>Normal weight</td> <td>Obese</td> </tr> <tr> <td>70</td> <td>170</td> <td>Overweight</td> <td>Normal weight</td> </tr> <tr> <td>70</td> <td>210</td> <td>Normal weight</td> <td>Underweight</td> </tr> </tbody> </table> <p>Observations:</p> <ul> <li>For the first person, the mean weight is too high, leading the model to classify them as ‚ÄúObese‚Äù.</li> <li>For the second person, the mean value is too low, causing the model to predict ‚ÄúNormal weight‚Äù despite the ground truth being ‚ÄúOverweight‚Äù. The missing value should be higher.</li> <li>The third person is very tall with a ‚ÄúNormal weight‚Äù label. However, the mean value is too low, and the model predicts ‚ÄúUnderweight‚Äù.</li> </ul> <p>Clearly, data integrity suffers when missing values are replaced with the mean.</p> <p>An intuitive observation is that weight and height are correlated. Therefore, it might be possible to estimate an unknown weight based on the known height value. Additionally, considering the obesity label could further improve the accuracy of these estimates.</p> <p>In this article, we will attempt to solve this problem using the conditional expectation method. By leveraging the relationship between height and weight, we aim to more accurately estimate the missing weight values and preserve the integrity of our dataset.</p> <p>Although there‚Äôs no code here, you can check out the behind-the-scenes work in the notebook on repository <d-cite key="repo"></d-cite>.</p> <h2 id="data-characteristics">Data characteristics</h2> <h3 id="information-about-dataset">Information about dataset</h3> <p>For our testing, we‚Äôll use The Complete Pokemon Dataset <d-cite key="completepokedataset"></d-cite>, focusing on the height and weight features. We‚Äôll simulate missing data by assuming some weight values are lost, creating gaps in the dataset. First, we‚Äôll fill these gaps using the mean values as a baseline method. Then, we‚Äôll use conditional expectation for a more sophisticated approach. Finally, we‚Äôll compare the errors from each method to see which one performs better.</p> <p><a id="tab2">Table 2.</a> First few rows of a dataset.</p> <table> <thead> <tr> <th>weight [kg]</th> <th>height [m]</th> </tr> </thead> <tbody> <tr> <td>¬†</td> <td>0.7</td> </tr> <tr> <td>13</td> <td>1</td> </tr> <tr> <td>100</td> <td>2</td> </tr> <tr> <td>8.5</td> <td>0.6</td> </tr> <tr> <td>¬†</td> <td>1.1</td> </tr> </tbody> </table> <h3 id="relationship-between-weight-and-height-visualised">Relationship between weight and height visualised</h3> <p>The relationship between weight and height is visualized in the images below. The scatter plot on the left shows the original data, while the plot on the right represents the data fitted into a Multivariate Normal Distribution. These plots indicate that <strong>the weight and height features are correlated</strong>. Later, we‚Äôll leverage this correlation to estimate missing weight values based on the known heights using the conditional expectation method.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/2024-05-17-missing_values_conditional_expectation/scatter_plot-480.webp 480w,/assets/2024-05-17-missing_values_conditional_expectation/scatter_plot-800.webp 800w,/assets/2024-05-17-missing_values_conditional_expectation/scatter_plot-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/2024-05-17-missing_values_conditional_expectation/scatter_plot.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/2024-05-17-missing_values_conditional_expectation/distribution_plot-480.webp 480w,/assets/2024-05-17-missing_values_conditional_expectation/distribution_plot-800.webp 800w,/assets/2024-05-17-missing_values_conditional_expectation/distribution_plot-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/2024-05-17-missing_values_conditional_expectation/distribution_plot.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Data scatter and distribution plots. </div> <h2 id="baseline-method---mean-value-replacement">Baseline method - mean value replacement</h2> <p>First, we calculated the mean value of weight and used it to replace each missing record. The mean weight is 38.25 kg. <a href="#tab3">Table 3</a> illustrates the first few records where missing values were replaced by mean.</p> <p><a id="tab3">Table 3.</a> First few rows of a subset with missing values after mean value replacement.</p> <table> <thead> <tr> <th>weight_kg</th> <th>height_m</th> </tr> </thead> <tbody> <tr> <td>38.25</td> <td>0.7</td> </tr> <tr> <td>38.25</td> <td>1.1</td> </tr> <tr> <td>38.25</td> <td>1.6</td> </tr> <tr> <td>38.25</td> <td>0.5</td> </tr> <tr> <td>38.25</td> <td>0.6</td> </tr> <tr> <td>38.25</td> <td>1</td> </tr> </tbody> </table> <p>The errors for this method, also computed in the notebook, are as follows:</p> <ul> <li>Mean Value Method - RMSE: 35.60 kg</li> <li>Mean Value Method - Maximum Absolute Difference: 148.75 kg</li> </ul> <p>These metrics will serve as a baseline to compare with the more sophisticated conditional expectation approach.</p> <h2 id="conditional-expectation-with-interactive-plot">Conditional expectation with interactive plot</h2> <h3 id="motivation-and-quick-math">Motivation and quick math</h3> <p>Given the correlation between height and weight, we can use the known height to better estimate the missing weight values. This can be achieved using the conditional expectation method. But how do we calculate the conditional expectation of weight given the height?</p> <p>Assume we have two random variables, \(X\) (weight) and \(Y\) (height), and the height value is already known \(Y = y\). We can calculate the conditional probability as a weighted sum of \(X\) values and their conditional probabilities \(p(X \lvert Y)\). Mathematically, this can be expressed as <d-cite key="tabogaconditionalexpectation"></d-cite>, <d-cite key="bishop2006pattern"></d-cite>:</p> <p>\begin{equation} E[X \lvert Y = y] = \sum_{x}p(x \lvert y)\cdot x \end{equation}</p> <p>This equation tells us that the expected value of weight, given a specific height, is a sum of all possible weights weighted by their conditional probabilities given the height. This approach leverages the relationship between the variables to provide a more accurate estimation than simple mean replacement.</p> <h3 id="conditional-probability---interactive-plot">Conditional probability - interactive plot</h3> <p>The plot below illustrates how the expected value of weight changes concerning a given height. The red slice on the 3D plot and the 2D plot on the right show the weight‚Äôs conditional probability. As the height increases, the weight also tends to increase. You can interact with the plot using a slider to see these changes dynamically.</p> <p>This method aims to provide a more nuanced and accurate way of handling missing data by utilizing the inherent relationships within the dataset.</p> <div class="l-page"> <iframe src="/assets/2024-05-17-missing_values_conditional_expectation/interact_marginal_dist.html" frameborder="0" scrolling="no" height="600px" width="100%" style="border: 1px dashed grey;"></iframe> </div> <h2 id="replacing-missing-values-with-conditional-expectation">Replacing missing values with conditional expectation</h2> <p>Now that we‚Äôve calculated the conditional expectation of weight based on height, we can replace the missing values in the dataset with these estimated values. The <a href="#tab4">table 4</a> displays only the records that were initially missing data. As you explore this table, you‚Äôll notice that the weight values have been set proportionally to the height, reflecting the relationship we observed between these features.</p> <p><a id="tab4">Table 4.</a> First few rows of a subset with missing values after conditional expectation replacement.</p> <table> <thead> <tr> <th>weight [kg]</th> <th>height [m]</th> </tr> </thead> <tbody> <tr> <td>33.68</td> <td>0.7</td> </tr> <tr> <td>48.05</td> <td>1.1</td> </tr> <tr> <td>70.97</td> <td>1.6</td> </tr> <tr> <td>28.12</td> <td>0.5</td> </tr> <tr> <td>30.77</td> <td>0.6</td> </tr> <tr> <td>44.06</td> <td>1</td> </tr> </tbody> </table> <h2 id="errors">Errors</h2> <p>After estimating the weight values using both the mean and conditional expectation methods, we can now calculate the errors between our guesses and the ground truth. These errors have been computed in a Python notebook <d-cite key="repo"></d-cite> and are presented in the <a href="#tab5">table 5</a>. As shown, the guessing errors are lower when using the conditional expectation method compared to the mean value approach. This improvement suggests that leveraging the relationship between height and weight through conditional expectation leads to more accurate estimations.</p> <p><a id="tab5">Table 5.</a> Guessing errors for mean and conditional expectation methods.</p> <table> <thead> <tr> <th>Guessing Method</th> <th>RMSE</th> <th>Maximum absolute difference</th> </tr> </thead> <tbody> <tr> <td>Mean value</td> <td>35.60 kg</td> <td>148.75 kg</td> </tr> <tr> <td>Conditional expectation</td> <td><strong>27.61</strong> kg</td> <td><strong>95.81</strong> kg</td> </tr> </tbody> </table> <p>These results demonstrate the effectiveness of incorporating conditional expectation analysis into handling missing data. Additionally, further improvements could be achieved by integrating additional features, such as obesity labels, into our analysis.</p> <h2 id="conclusions">Conclusions</h2> <p>The article highlights the importance of addressing missing values in datasets and the potential drawbacks of using simplistic methods like mean value replacement. In response, it introduces conditional expectation as a more sophisticated approach, leveraging the context provided by correlated variables to fill in missing data. Through empirical testing, it demonstrates that conditional expectation can effectively reduce guessing errors compared to mean value replacement, thereby enhancing the integrity of the dataset.</p> <p>For those interested in delving deeper into this concept, the Python notebook available in the repository <d-cite key="repo"></d-cite> provides a comprehensive exploration of the methodology and its implementation.</p>]]></content><author><name>Piotr Durawa</name></author><category term="machine-learning"/><category term="machine-learning"/><category term="data-preparation"/><category term="data-science"/><category term="artificial-intelligence"/><summary type="html"><![CDATA[Context-based missing value estimation]]></summary></entry></feed>